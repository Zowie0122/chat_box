{"version":3,"sources":["components/Chat.js","components/Register.js","components/Login.js","components/Join.js","app.js","index.js"],"names":["socket","Register","history","useHistory","useState","name","setName","password","setPassword","error","setError","registerHandler","e","a","preventDefault","axios","post","user_name","user_password","res","data","authToken","localStorage","setItem","userId","console","log","push","message","for","type","onChange","target","value","onClick","loginHandler","href","Chat","room","partner","messages","setMessages","setMessage","useEffect","io","emit","on","target_room","user_chats","off","className","style","height","length","map","m","sender_name","key","_id","time","rows","placeholder","onKeyPress","event","Date","toLocaleString","timeZone","sendMessageHandler","Join","contacts","setContacts","setTarget","setRoom","chatRecords","setChatRecords","getItem","id","authtoken","headers","fetchData","get","chatRes","listRes","saveToRecentContactList","roomName","sort","join","chat","clear","contact","App","path","exact","component","Login","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ee3eb8e4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./app.scss\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nlet socket;\n\nconst Chat = ({ name, room, partner }) => {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState([]);\n\n  const ENDPOINT = \"http://localhost:5000\";\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", { name, room }, () => {});\n    socket.on(\"message_records\", (target_room) => {\n      setMessages(target_room.user_chats);\n    });\n\n    return () => {\n      setMessages([]);\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, name, room]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessageHandler = (event) => {\n    event.preventDefault();\n    if (message === \"\") {\n      setError(\"Message can not be empty!\");\n    } else {\n      socket.emit(\"chatMessage\", {\n        time: new Date().toLocaleString({ timeZone: \"Asia/Tokyo\" }),\n        message: message,\n        room: room,\n        sender_name: name,\n      });\n    }\n  };\n\n  return (\n    <div className=\"chatBox\">\n      <h1>Chat with {partner}</h1>\n\n      <Scrollbars style={{ height: 500 }}>\n        {messages.length !== 0 &&\n          messages.map((m) => (\n            <div\n              className={m.sender_name === name ? \"self\" : \"partner\"}\n              key={m._id}\n            >\n              <div className=\"message\">{m.message}</div>\n              <div className=\"time\">{m.time}</div>\n            </div>\n          ))}\n      </Scrollbars>\n\n      <div>\n        <div>\n          <textarea\n            rows=\"10\"\n            className=\"inputTextarea\"\n            value={message}\n            placeholder=\"Type here\"\n            onChange={(e) => {\n              setMessage(e.target.value);\n            }}\n            onKeyPress={(event) =>\n              event.key === \"Enter\" ? setMessage(message + \"\\n\") : null\n            }\n          />\n        </div>\n        {error !== null && <p>{error}</p>}\n        <div>\n          <button\n            className=\"messageSendButton\"\n            type=\"text\"\n            onClick={(event) => sendMessageHandler(event)}\n          >\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./app.scss\";\n\nconst Register = () => {\n  const history = useHistory();\n  const [name, setName] = useState();\n  const [password, setPassword] = useState();\n  const [error, setError] = useState(null);\n\n  const registerHandler = async (e) => {\n    e.preventDefault();\n    const res = await axios.post(\"http://localhost:5000/register\", {\n      user_name: name,\n      user_password: password,\n    });\n    if (res.data.authToken) {\n      localStorage.setItem(\"auth\", res.data.authToken);\n      localStorage.setItem(\"id\", res.data.userId);\n      localStorage.setItem(\"name\", name);\n      console.log(res.data);\n      history.push(\"/join\");\n    } else {\n      setError(res.data.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Sign Up</h1>\n      <div>\n        <label for=\"fname\">Nick Name</label>\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n      </div>\n      <button\n        onClick={(e) => {\n          registerHandler(e);\n        }}\n      >\n        Sign Up\n      </button>\n      {error !== null && <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./app.scss\";\n\nconst Register = () => {\n  const history = useHistory();\n  const [name, setName] = useState();\n  const [password, setPassword] = useState();\n  const [error, setError] = useState(null);\n\n  const loginHandler = async (e) => {\n    e.preventDefault();\n    const res = await axios.post(\"http://localhost:5000/login\", {\n      user_name: name,\n      user_password: password,\n    });\n    if (res.data.authToken) {\n      localStorage.setItem(\"auth\", res.data.authToken);\n      localStorage.setItem(\"id\", res.data.userId);\n      localStorage.setItem(\"name\", name);\n      console.log(res.data);\n      history.push(\"/join\");\n    } else {\n      setError(res.data.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <div>\n        <label for=\"fname\">Nick Name</label>\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        Not have an account? <a href=\"/register\">Here</a> to sign up.\n      </div>\n      <button\n        onClick={(e) => {\n          loginHandler(e);\n        }}\n      >\n        Login\n      </button>\n\n      {error !== null && <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport \"./app.scss\";\n\nconst Join = () => {\n  const history = useHistory();\n  const [name, setName] = useState(null);\n  const [contacts, setContacts] = useState(null);\n  const [target, setTarget] = useState(null);\n  const [room, setRoom] = useState(\"*\");\n  const [chatRecords, setChatRecords] = useState(null);\n\n  const user_name = localStorage.getItem(\"name\");\n  const id = localStorage.getItem(\"id\");\n  const authtoken = localStorage.getItem(\"auth\");\n  const headers = {\n    user_name: user_name,\n    id: id,\n    authtoken: authtoken,\n  };\n\n  const fetchData = async () => {\n    if (user_name && id && authtoken) {\n      setName(user_name);\n\n      const chatRes = await axios.get(\"http://localhost:5000/dashboard\", {\n        headers: headers,\n      });\n      setChatRecords(chatRes.data.user_chats);\n\n      const listRes = await axios.get(\"http://localhost:5000/userlists\", {\n        headers: headers,\n      });\n\n      setContacts(listRes.data);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const saveToRecentContactList = async () => {\n    const res = await axios.post(\n      \"http://localhost:5000/dashboard\",\n      { user_name: name, partner: target },\n      { headers: headers }\n    );\n    console.log(res.message);\n  };\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, [target]);\n\n  useEffect(() => {\n    const roomName = [name, target].sort().join(\"*\");\n    setRoom(roomName);\n\n    saveToRecentContactList();\n    // eslint-disable-next-line\n    fetchData();\n    // eslint-disable-next-line\n  }, [target]);\n\n  return (\n    <div className=\"joinContainer\">\n      <div className=\"recentChats\">\n        <h1>Recent Chats</h1>\n\n        {chatRecords !== null && chatRecords.length > 0 && (\n          <div className=\"recentList\">\n            {chatRecords.map((chat) => (\n              <p\n                onClick={() => {\n                  setTarget(chat.partner);\n                }}\n              >\n                {chat.partner}\n              </p>\n            ))}\n          </div>\n        )}\n      </div>\n      <div>\n        {room !== \"*\" && <Chat name={name} room={room} partner={target} />}\n      </div>\n\n      <div className=\"allContacts\">\n        {\" \"}\n        <div\n          className=\"contact\"\n          onClick={() => {\n            localStorage.clear();\n            history.push(\"/\");\n          }}\n        >\n          Logout\n        </div>\n        <h1>All contacts</h1>\n        {contacts !== null && (\n          <div>\n            {contacts.map((contact) => (\n              <div\n                className=\"contact\"\n                onClick={() => {\n                  setTarget(contact);\n                }}\n              >\n                {contact}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Join;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Join from \"./components/Join\";\n\nconst App = () => (\n  <Router>\n    <Route path=\"/register\" exact component={Register} />\n    <Route path=\"/\" exact component={Login} />\n    <Route path=\"/join\" exact component={Join} />\n  </Router>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}