{"ast":null,"code":"var _jsxFileName = \"/Users/zowie/Desktop/chat_box/client/src/components/Join.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport \"./app.scss\";\n\nconst Join = () => {\n  const history = useHistory();\n  const [name, setName] = useState(null);\n  const [contacts, setContacts] = useState(null);\n  const [target, setTarget] = useState(null);\n  const [room, setRoom] = useState(\"*\");\n  const [chatRecords, setChatRecords] = useState(null);\n  const user_name = localStorage.getItem(\"name\");\n  const id = localStorage.getItem(\"id\");\n  const authtoken = localStorage.getItem(\"auth\");\n  const headers = {\n    user_name: user_name,\n    id: id,\n    authtoken: authtoken\n  };\n\n  const fetchData = async () => {\n    if (user_name && id && authtoken) {\n      setName(user_name);\n      const chatRes = await axios.get(\"http://localhost:5000/dashboard\", {\n        headers: headers\n      });\n      setChatRecords(chatRes.data.user_chats);\n      const listRes = await axios.get(\"http://localhost:5000/userlists\", {\n        headers: headers\n      });\n      setContacts(listRes.data);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const saveToRecentContactList = async () => {\n    const res = await axios.post(\"http://localhost:5000/dashboard\", {\n      user_name: name,\n      partner: target\n    }, {\n      headers: headers\n    });\n    console.log(res.message);\n  };\n\n  useEffect(() => {\n    fetchData(); // eslint-disable-next-line\n  }, [target]);\n  useEffect(() => {\n    const roomName = [name, target].sort().join(\"*\");\n    setRoom(roomName);\n    saveToRecentContactList(); // eslint-disable-next-line\n\n    fetchData(); // eslint-disable-next-line\n  }, [target]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"joinContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recentChats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Recent Chats\"), chatRecords !== null && chatRecords.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recentList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, chatRecords.map(chat => /*#__PURE__*/React.createElement(\"p\", {\n    onClick: () => {\n      setTarget(chat.partner);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, chat.partner)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, room !== \"*\" && /*#__PURE__*/React.createElement(Chat, {\n    name: name,\n    room: room,\n    partner: target,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allContacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact\",\n    onClick: () => {\n      localStorage.clear();\n      history.push(\"/\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"All contacts\"), contacts !== null && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, contacts.map(contact => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact\",\n    onClick: () => {\n      setTarget(contact);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, contact)))));\n};\n\nexport default Join;","map":{"version":3,"sources":["/Users/zowie/Desktop/chat_box/client/src/components/Join.js"],"names":["React","useState","useEffect","axios","useHistory","Chat","Join","history","name","setName","contacts","setContacts","target","setTarget","room","setRoom","chatRecords","setChatRecords","user_name","localStorage","getItem","id","authtoken","headers","fetchData","chatRes","get","data","user_chats","listRes","push","saveToRecentContactList","res","post","partner","console","log","message","roomName","sort","join","length","map","chat","clear","contact"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport \"./app.scss\";\n\nconst Join = () => {\n  const history = useHistory();\n  const [name, setName] = useState(null);\n  const [contacts, setContacts] = useState(null);\n  const [target, setTarget] = useState(null);\n  const [room, setRoom] = useState(\"*\");\n  const [chatRecords, setChatRecords] = useState(null);\n\n  const user_name = localStorage.getItem(\"name\");\n  const id = localStorage.getItem(\"id\");\n  const authtoken = localStorage.getItem(\"auth\");\n  const headers = {\n    user_name: user_name,\n    id: id,\n    authtoken: authtoken,\n  };\n\n  const fetchData = async () => {\n    if (user_name && id && authtoken) {\n      setName(user_name);\n\n      const chatRes = await axios.get(\"http://localhost:5000/dashboard\", {\n        headers: headers,\n      });\n      setChatRecords(chatRes.data.user_chats);\n\n      const listRes = await axios.get(\"http://localhost:5000/userlists\", {\n        headers: headers,\n      });\n\n      setContacts(listRes.data);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const saveToRecentContactList = async () => {\n    const res = await axios.post(\n      \"http://localhost:5000/dashboard\",\n      { user_name: name, partner: target },\n      { headers: headers }\n    );\n    console.log(res.message);\n  };\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, [target]);\n\n  useEffect(() => {\n    const roomName = [name, target].sort().join(\"*\");\n    setRoom(roomName);\n\n    saveToRecentContactList();\n    // eslint-disable-next-line\n    fetchData();\n    // eslint-disable-next-line\n  }, [target]);\n\n  return (\n    <div className=\"joinContainer\">\n      <div className=\"recentChats\">\n        <h1>Recent Chats</h1>\n\n        {chatRecords !== null && chatRecords.length > 0 && (\n          <div className=\"recentList\">\n            {chatRecords.map((chat) => (\n              <p\n                onClick={() => {\n                  setTarget(chat.partner);\n                }}\n              >\n                {chat.partner}\n              </p>\n            ))}\n          </div>\n        )}\n      </div>\n      <div>\n        {room !== \"*\" && <Chat name={name} room={room} partner={target} />}\n      </div>\n\n      <div className=\"allContacts\">\n        {\" \"}\n        <div\n          className=\"contact\"\n          onClick={() => {\n            localStorage.clear();\n            history.push(\"/\");\n          }}\n        >\n          Logout\n        </div>\n        <h1>All contacts</h1>\n        {contacts !== null && (\n          <div>\n            {contacts.map((contact) => (\n              <div\n                className=\"contact\"\n                onClick={() => {\n                  setTarget(contact);\n                }}\n              >\n                {contact}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Join;\n"]},"metadata":{},"sourceType":"module"}