{"ast":null,"code":"import _toConsumableArray from\"/Users/zowie/Desktop/chat_box/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/zowie/Desktop/chat_box/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import io from\"socket.io-client\";import\"./app.scss\";import{Scrollbars}from\"react-custom-scrollbars\";var socket;var Chat=function Chat(_ref){var name=_ref.name,room=_ref.room,partner=_ref.partner;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var ENDPOINT=\"http://localhost:5000\";useEffect(function(){socket=io(ENDPOINT);socket.emit(\"join\",{name:name,room:room},function(){});socket.on(\"message_records\",function(target_room){setMessages(target_room.user_chats);});return function(){setMessages([]);socket.emit(\"disconnect\");socket.off();};},[ENDPOINT,name,room]);useEffect(function(){socket.on(\"message\",function(message){setMessages([].concat(_toConsumableArray(messages),[message]));});},[messages]);var sendMessageHandler=function sendMessageHandler(event){event.preventDefault();if(message===\"\"){setError(\"Message can not be empty!\");}else{socket.emit(\"chatMessage\",{time:new Date().toLocaleString({timeZone:\"Asia/Tokyo\"}),message:message,room:room,sender_name:name});}};return/*#__PURE__*/React.createElement(\"div\",{className:\"chatBox\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Chat with \",partner),/*#__PURE__*/React.createElement(Scrollbars,{style:{height:500}},messages.length!==0&&messages.map(function(m){return/*#__PURE__*/React.createElement(\"div\",{className:m.sender_name===name?\"self\":\"partner\",key:m._id},/*#__PURE__*/React.createElement(\"div\",{className:\"message\"},m.message),/*#__PURE__*/React.createElement(\"div\",{className:\"time\"},m.time));})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"textarea\",{rows:\"10\",className:\"inputTextarea\",value:message,placeholder:\"Type here\",onChange:function onChange(e){setMessage(e.target.value);},onKeyPress:function onKeyPress(event){return event.key===\"Enter\"?setMessage(message+\"\\n\"):null;}})),error!==null&&/*#__PURE__*/React.createElement(\"p\",null,error),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"messageSendButton\",type:\"text\",onClick:function onClick(event){return sendMessageHandler(event);}},\"Send\"))));};export default Chat;","map":{"version":3,"sources":["/Users/zowie/Desktop/chat_box/client/src/components/Chat.js"],"names":["React","useState","useEffect","io","Scrollbars","socket","Chat","name","room","partner","messages","setMessages","message","setMessage","error","setError","ENDPOINT","emit","on","target_room","user_chats","off","sendMessageHandler","event","preventDefault","time","Date","toLocaleString","timeZone","sender_name","height","length","map","m","_id","e","target","value","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./app.scss\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nlet socket;\n\nconst Chat = ({ name, room, partner }) => {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState([]);\n\n  const ENDPOINT = \"http://localhost:5000\";\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", { name, room }, () => {});\n    socket.on(\"message_records\", (target_room) => {\n      setMessages(target_room.user_chats);\n    });\n\n    return () => {\n      setMessages([]);\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, name, room]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessageHandler = (event) => {\n    event.preventDefault();\n    if (message === \"\") {\n      setError(\"Message can not be empty!\");\n    } else {\n      socket.emit(\"chatMessage\", {\n        time: new Date().toLocaleString({ timeZone: \"Asia/Tokyo\" }),\n        message: message,\n        room: room,\n        sender_name: name,\n      });\n    }\n  };\n\n  return (\n    <div className=\"chatBox\">\n      <h1>Chat with {partner}</h1>\n\n      <Scrollbars style={{ height: 500 }}>\n        {messages.length !== 0 &&\n          messages.map((m) => (\n            <div\n              className={m.sender_name === name ? \"self\" : \"partner\"}\n              key={m._id}\n            >\n              <div className=\"message\">{m.message}</div>\n              <div className=\"time\">{m.time}</div>\n            </div>\n          ))}\n      </Scrollbars>\n\n      <div>\n        <div>\n          <textarea\n            rows=\"10\"\n            className=\"inputTextarea\"\n            value={message}\n            placeholder=\"Type here\"\n            onChange={(e) => {\n              setMessage(e.target.value);\n            }}\n            onKeyPress={(event) =>\n              event.key === \"Enter\" ? setMessage(message + \"\\n\") : null\n            }\n          />\n        </div>\n        {error !== null && <p>{error}</p>}\n        <div>\n          <button\n            className=\"messageSendButton\"\n            type=\"text\"\n            onClick={(event) => sendMessageHandler(event)}\n          >\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}